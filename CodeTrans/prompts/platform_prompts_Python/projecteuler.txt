###$###
1. Python Code:
def compute ( ) :
    ans = max ( sum ( int ( c ) for c in str ( a ** b ) ) for a in range ( 100 ) for b in range ( 100 ) )
    return str ( ans )
if __name__ == "__main__" :
    print ( compute ( ) )


1. Steps: Let's think step by step.

Step 1: First of all identify global variables and their types. Global variables are variables that are not inside scope of function and class declarations, present in the above Python Code-
Global variables:

Step 2: Identify classes and functions declarations present in the above Python Code-
Identified classes and functions declarations in the Python code:
def compute ( ) :

if __name__ == "__main__" :


Step 3: Considering Step 1 and Step 2, the corresponding Java Code should have declarations of these classes, functions and Global variables -
Identified classes, functions and Global variables declarations in the Java code:
public class Main {

    public static String compute();

    public static void main ( String [ ] args );

}

Step 4: Complete translation of the above Python code to Java code by considering identified classes, functions and Global variables declarations in Step 3. While generating the Java code, keep track of required library imports to be added in the Java Code. Make sure your generated code is syntactically correct-
1. Java Code:
import java.util.*;

public class Main {
    public static String compute() {
        long maxSum = 0;
        for (int a = 0; a < 100; a++) {
            for (int b = 0; b < 100; b++) {
                java.math.BigInteger power = java.math.BigInteger.valueOf(a).pow(b);
                int sumOfDigits = 0;
                for (char c : power.toString().toCharArray()) {
                    sumOfDigits += Character.getNumericValue(c);
                }
                maxSum = Math.max(maxSum, sumOfDigits);
            }
        }
        return Long.toString(maxSum);
    }

    public static void main(String[] args) {
        System.out.println(compute());
    }
}

###$###
2. Python Code:
import eulerlib , itertools
def compute ( ) :
    TARGET = 2000
    count = 2
    for ring in itertools . count ( 2 ) :
        if all ( map ( eulerlib . is_prime , ( ring * 6 - 1 , ring * 6 + 1 , ring * 12 + 5 ) ) ) :
            count += 1
            if count == TARGET :
                return str ( ring * ( ring - 1 ) * 3 + 2 )
        if all ( map ( eulerlib . is_prime , ( ring * 6 - 1 , ring * 6 + 5 , ring * 12 - 7 ) ) ) :
            count += 1
            if count == TARGET :
                return str ( ring * ( ring + 1 ) * 3 + 1 )
if __name__ == "__main__" :
    print ( compute ( ) )


2. Steps: Let's think step by step.

Step 1: First of all identify global variables and their types. Global variables are variables that are not inside scope of function and class declarations, present in the above Python Code-
Global variables:

Step 2: Identify classes and functions declarations present in the above Python Code-
Identified classes and functions declarations in the Python code:
def compute ( ) :

if __name__ == "__main__" :

Step 3: Considering Step 1 and Step 2, the corresponding Java Code should have declarations of these classes, functions and Global variables -
Identified classes, functions and Global variables declarations in the Java code:
public class Main {

    public static void main ( String [ ] args );

    public static String compute();

	public static boolean isPrime(int x);
}

Step 4: Complete translation of the above Python code to Java code by considering identified classes, functions and Global variables declarations in Step 3. While generating the Java code, keep track of required library imports to be added in the Java Code. Make sure your generated code is syntactically correct-
2. Java Code:
import java.util.*;
import java.lang.Math; 

public class Main {

    public static void main(String[] args) {
        System.out.println(compute());
    }

    public static String compute() {
        int TARGET = 2000;
        int count = 2;
        for (int ring = 2; ; ring++) {
            if ((long) ring * 12 + 5 > Integer.MAX_VALUE) throw new ArithmeticException();
            if (isPrime(ring * 6 - 1) && isPrime(ring * 6 + 1) && isPrime(ring * 12 + 5)) {
                count++;
                if (count == TARGET) return Long.toString((long) ring * (ring - 1) * 3 + 2);
            }
            if (isPrime(ring * 6 - 1) && isPrime(ring * 6 + 5) && isPrime(ring * 12 - 7)) {
                count++;
                if (count == TARGET) return Long.toString((long) ring * (ring + 1) * 3 + 1);
            }
        }
    }
	public static boolean isPrime(int x) {
		if (x < 0)
			throw new IllegalArgumentException("Negative number");
		if (x == 0 || x == 1)
			return false;
		else if (x == 2)
			return true;
		else {
			if (x % 2 == 0)
				return false;
			for (int i = 3, end = (int)Math.sqrt(x); i <= end; i += 2) {
				if (x % i == 0)
					return false;
			}
			return true;
		}
	}

}

###$###
3. Python Code:

